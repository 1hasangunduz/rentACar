server.port = 8080
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/rentACarCamp
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.javax.persistence.validation.mode = none

# pring.jpa.hibernate.ddl-auto : git nesnelerinin + ve -'lerine bak ona göre veritaban?n? yap?land?r demek. ddl-auto=update ise veritaban?n? güncelle demek. ddl-auto=create ise veritaban?n? olu?tur demek. ddl-auto=none ise veritaban?n? olu?turma demek.
# spring.jpa.hibernate.show-sql : sql sorgular?n? göster demek.
# spring.datasource.url : veritaban?n?n url'si demek.
# spring.datasource.username : veritaban?n?n kullan?c? ad? demek.
# spring.datasource.password : veritaban?n?n ?ifresi demek.
# spring.jpa.properties.javax.persistence.validation.mode : veritaban? validasyonu demek.
# spring.jpa.properties.hibernate.dialect : veritaban? sorgu dili demek.
# spring.jpa.properties.hibernate.format_sql : sql sorgular?n? formatl? göster demek.
# spring.jpa.properties.hibernate.use_sql_comments : sql sorgular?n?n yorum sat?rlar?n? göster demek.
# spring.jpa.properties.hibernate.id.new_generator_mappings : id'leri otomatik artt?r demek.
# ddl : data definition language demek. veritaban? olu?turma, güncelleme, silme gibi i?lemleri yapar.